services:

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    networks:
      - postgres
    volumes:
      - ./database.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: admin 
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - 8080:80
    networks:
      - postgres
    restart: unless-stopped

  api:
    image: node:16
    restart: unless-stopped
    working_dir: /home/node/app
    environment:
      PGUSER: postgres
      PGHOST: postgres
      PGDATABASE: postgres
      PGPASSWORD: postgres
      PGPORT: 5432
    volumes:
      - ./:/home/node/app
    command: "npm start"
    networks:
    - postgres
    ports:
      - 3001:3001
    depends_on:
      postgres:
        condition: service_healthy
  
  client:
    image: node:16
    restart: unless-stopped
    working_dir: /home/node/client
    volumes:
      - ./client:/home/node/client
    command: "npm start"
    networks:
    - postgres
    ports:
      - 3000:3000
    depends_on:
      - api

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: